### YamlMime:ManagedReference
items:
- uid: DFeSigner.Core.Signers.DFeXmlSigner
  commentId: T:DFeSigner.Core.Signers.DFeXmlSigner
  id: DFeXmlSigner
  parent: DFeSigner.Core.Signers
  children:
  - DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId(System.Xml.XmlDocument)
  - DFeSigner.Core.Signers.DFeXmlSigner.IdeTagElement
  - DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid(System.String)
  - DFeSigner.Core.Signers.DFeXmlSigner.ModTagElement
  - DFeSigner.Core.Signers.DFeXmlSigner.Sign(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  langs:
  - csharp
  - vb
  name: DFeXmlSigner
  nameWithType: DFeXmlSigner
  fullName: DFeSigner.Core.Signers.DFeXmlSigner
  type: Class
  source:
    remote:
      path: DFeSigner.Core/Signers/DFeXmlSigner.cs
      branch: feature/add-docfx
      repo: https://github.com/tiago-saldanha/DFeSigner.git
    id: DFeXmlSigner
    path: ../DFeSigner.Core/Signers/DFeXmlSigner.cs
    startLine: 12
  assemblies:
  - DFeSigner.Core
  namespace: DFeSigner.Core.Signers
  summary: >-
    Classe abstrata base para a assinatura digital de Documentos Fiscais Eletrônicos (DF-e).

    Esta classe define o contrato para a assinatura e manipula as operações comuns de criptografia XML.
  example: []
  syntax:
    content: public abstract class DFeXmlSigner
    content.vb: Public MustInherit Class DFeXmlSigner
  inheritance:
  - System.Object
  derivedClasses:
  - DFeSigner.Core.Signers.CTeXmlSigner
  - DFeSigner.Core.Signers.MDFeXmlSigner
  - DFeSigner.Core.Signers.NFCeXmlSigner
  - DFeSigner.Core.Signers.NFeXmlSigner
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DFeSigner.Core.Signers.DFeXmlSigner.IdeTagElement
  commentId: F:DFeSigner.Core.Signers.DFeXmlSigner.IdeTagElement
  id: IdeTagElement
  parent: DFeSigner.Core.Signers.DFeXmlSigner
  langs:
  - csharp
  - vb
  name: IdeTagElement
  nameWithType: DFeXmlSigner.IdeTagElement
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.IdeTagElement
  type: Field
  source:
    remote:
      path: DFeSigner.Core/Signers/DFeXmlSigner.cs
      branch: feature/add-docfx
      repo: https://github.com/tiago-saldanha/DFeSigner.git
    id: IdeTagElement
    path: ../DFeSigner.Core/Signers/DFeXmlSigner.cs
    startLine: 17
  assemblies:
  - DFeSigner.Core
  namespace: DFeSigner.Core.Signers
  summary: Tag padrão que representa o grupo de identificação do documento fiscal eletrônico.
  example: []
  syntax:
    content: protected const string IdeTagElement = "ide"
    return:
      type: System.String
    content.vb: Protected Const IdeTagElement As String = "ide"
- uid: DFeSigner.Core.Signers.DFeXmlSigner.ModTagElement
  commentId: F:DFeSigner.Core.Signers.DFeXmlSigner.ModTagElement
  id: ModTagElement
  parent: DFeSigner.Core.Signers.DFeXmlSigner
  langs:
  - csharp
  - vb
  name: ModTagElement
  nameWithType: DFeXmlSigner.ModTagElement
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.ModTagElement
  type: Field
  source:
    remote:
      path: DFeSigner.Core/Signers/DFeXmlSigner.cs
      branch: feature/add-docfx
      repo: https://github.com/tiago-saldanha/DFeSigner.git
    id: ModTagElement
    path: ../DFeSigner.Core/Signers/DFeXmlSigner.cs
    startLine: 22
  assemblies:
  - DFeSigner.Core
  namespace: DFeSigner.Core.Signers
  summary: Tag padrão que representa o modelo do documento fiscal eletrônico.
  example: []
  syntax:
    content: protected const string ModTagElement = "mod"
    return:
      type: System.String
    content.vb: Protected Const ModTagElement As String = "mod"
- uid: DFeSigner.Core.Signers.DFeXmlSigner.Sign(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:DFeSigner.Core.Signers.DFeXmlSigner.Sign(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Sign(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: DFeSigner.Core.Signers.DFeXmlSigner
  langs:
  - csharp
  - vb
  name: Sign(string, X509Certificate2)
  nameWithType: DFeXmlSigner.Sign(string, X509Certificate2)
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.Sign(string, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: DFeSigner.Core/Signers/DFeXmlSigner.cs
      branch: feature/add-docfx
      repo: https://github.com/tiago-saldanha/DFeSigner.git
    id: Sign
    path: ../DFeSigner.Core/Signers/DFeXmlSigner.cs
    startLine: 34
  assemblies:
  - DFeSigner.Core
  namespace: DFeSigner.Core.Signers
  summary: >-
    Assina digitalmente um documento XML de DF-e usando um certificado digital.

    Este método é o ponto de entrada principal para a assinatura.
  example: []
  syntax:
    content: public string Sign(string xmlContent, X509Certificate2 certificate)
    parameters:
    - id: xmlContent
      type: System.String
      description: O conteúdo do XML a ser assinado.
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: O certificado digital X.509 a ser usado para a assinatura.
    return:
      type: System.String
      description: O XML assinado como uma string, ou lança uma exceção em caso de erro.
    content.vb: Public Function Sign(xmlContent As String, certificate As X509Certificate2) As String
  overload: DFeSigner.Core.Signers.DFeXmlSigner.Sign*
  exceptions:
  - type: DFeSigner.Core.Exceptions.InvalidXmlFormatException
    commentId: T:DFeSigner.Core.Exceptions.InvalidXmlFormatException
    description: Lançada se o conteúdo XML for nulo ou vazio.
  - type: DFeSigner.Core.Exceptions.InvalidCertificateException
    commentId: T:DFeSigner.Core.Exceptions.InvalidCertificateException
    description: Lançada se o certificado for nulo ou não possuir uma chave privada acessível.
  nameWithType.vb: DFeXmlSigner.Sign(String, X509Certificate2)
  fullName.vb: DFeSigner.Core.Signers.DFeXmlSigner.Sign(String, System.Security.Cryptography.X509Certificates.X509Certificate2)
  name.vb: Sign(String, X509Certificate2)
- uid: DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid(System.String)
  commentId: M:DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid(System.String)
  id: IsSignatureValid(System.String)
  parent: DFeSigner.Core.Signers.DFeXmlSigner
  langs:
  - csharp
  - vb
  name: IsSignatureValid(string)
  nameWithType: DFeXmlSigner.IsSignatureValid(string)
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid(string)
  type: Method
  source:
    remote:
      path: DFeSigner.Core/Signers/DFeXmlSigner.cs
      branch: feature/add-docfx
      repo: https://github.com/tiago-saldanha/DFeSigner.git
    id: IsSignatureValid
    path: ../DFeSigner.Core/Signers/DFeXmlSigner.cs
    startLine: 61
  assemblies:
  - DFeSigner.Core
  namespace: DFeSigner.Core.Signers
  summary: >-
    Verifica se um documento XML possui uma assinatura digital válida.

    Este método procura pelo elemento &lt;Signature&gt; no namespace XML Digital Signature

    e valida a integridade da assinatura.
  example: []
  syntax:
    content: public bool IsSignatureValid(string xmlContent)
    parameters:
    - id: xmlContent
      type: System.String
      description: O conteúdo do XML como uma string para ser validado.
    return:
      type: System.Boolean
      description: <code>true</code> se a assinatura digital no XML for válida; caso contrário, <code>false</code>.
    content.vb: Public Function IsSignatureValid(xmlContent As String) As Boolean
  overload: DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid*
  exceptions:
  - type: DFeSigner.Core.Exceptions.InvalidXmlFormatException
    commentId: T:DFeSigner.Core.Exceptions.InvalidXmlFormatException
    description: Lançada quando o <code class="paramref">xmlContent</code> é nulo ou vazio.
  - type: DFeSigner.Core.Exceptions.MissingSignatureElementException
    commentId: T:DFeSigner.Core.Exceptions.MissingSignatureElementException
    description: Lançada quando o elemento 'Signature' não é encontrado no XML.
  nameWithType.vb: DFeXmlSigner.IsSignatureValid(String)
  fullName.vb: DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid(String)
  name.vb: IsSignatureValid(String)
- uid: DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId(System.Xml.XmlDocument)
  commentId: M:DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId(System.Xml.XmlDocument)
  id: GetReferenceId(System.Xml.XmlDocument)
  parent: DFeSigner.Core.Signers.DFeXmlSigner
  langs:
  - csharp
  - vb
  name: GetReferenceId(XmlDocument)
  nameWithType: DFeXmlSigner.GetReferenceId(XmlDocument)
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId(System.Xml.XmlDocument)
  type: Method
  source:
    remote:
      path: DFeSigner.Core/Signers/DFeXmlSigner.cs
      branch: feature/add-docfx
      repo: https://github.com/tiago-saldanha/DFeSigner.git
    id: GetReferenceId
    path: ../DFeSigner.Core/Signers/DFeXmlSigner.cs
    startLine: 76
  assemblies:
  - DFeSigner.Core
  namespace: DFeSigner.Core.Signers
  summary: >-
    Método abstrato que deve ser implementado pelas classes concretas

    para identificar o elemento XML a ser assinado e seu ID de referência.
  example: []
  syntax:
    content: protected abstract string GetReferenceId(XmlDocument document)
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: O objeto XmlDocument contendo o XML a ser processado.
    return:
      type: System.String
      description: Uma string contendo o atributo 'Id' do elemento root a ser assinado.
    content.vb: Protected MustOverride Function GetReferenceId(document As XmlDocument) As String
  overload: DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId*
references:
- uid: DFeSigner.Core.Signers
  commentId: N:DFeSigner.Core.Signers
  href: DFeSigner.html
  name: DFeSigner.Core.Signers
  nameWithType: DFeSigner.Core.Signers
  fullName: DFeSigner.Core.Signers
  spec.csharp:
  - uid: DFeSigner
    name: DFeSigner
    href: DFeSigner.html
  - name: .
  - uid: DFeSigner.Core
    name: Core
    href: DFeSigner.Core.html
  - name: .
  - uid: DFeSigner.Core.Signers
    name: Signers
    href: DFeSigner.Core.Signers.html
  spec.vb:
  - uid: DFeSigner
    name: DFeSigner
    href: DFeSigner.html
  - name: .
  - uid: DFeSigner.Core
    name: Core
    href: DFeSigner.Core.html
  - name: .
  - uid: DFeSigner.Core.Signers
    name: Signers
    href: DFeSigner.Core.Signers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DFeSigner.Core.Exceptions.InvalidXmlFormatException
  commentId: T:DFeSigner.Core.Exceptions.InvalidXmlFormatException
  href: DFeSigner.Core.Exceptions.InvalidXmlFormatException.html
  name: InvalidXmlFormatException
  nameWithType: InvalidXmlFormatException
  fullName: DFeSigner.Core.Exceptions.InvalidXmlFormatException
- uid: DFeSigner.Core.Exceptions.InvalidCertificateException
  commentId: T:DFeSigner.Core.Exceptions.InvalidCertificateException
  href: DFeSigner.Core.Exceptions.InvalidCertificateException.html
  name: InvalidCertificateException
  nameWithType: InvalidCertificateException
  fullName: DFeSigner.Core.Exceptions.InvalidCertificateException
- uid: DFeSigner.Core.Signers.DFeXmlSigner.Sign*
  commentId: Overload:DFeSigner.Core.Signers.DFeXmlSigner.Sign
  href: DFeSigner.Core.Signers.DFeXmlSigner.html#DFeSigner_Core_Signers_DFeXmlSigner_Sign_System_String_System_Security_Cryptography_X509Certificates_X509Certificate2_
  name: Sign
  nameWithType: DFeXmlSigner.Sign
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.Sign
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509certificate2
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Cryptography
    name: Cryptography
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography
  - name: .
  - uid: System.Security.Cryptography.X509Certificates
    name: X509Certificates
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.x509certificates
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Cryptography
    name: Cryptography
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography
  - name: .
  - uid: System.Security.Cryptography.X509Certificates
    name: X509Certificates
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.x509certificates
- uid: DFeSigner.Core.Exceptions.MissingSignatureElementException
  commentId: T:DFeSigner.Core.Exceptions.MissingSignatureElementException
  href: DFeSigner.Core.Exceptions.MissingSignatureElementException.html
  name: MissingSignatureElementException
  nameWithType: MissingSignatureElementException
  fullName: DFeSigner.Core.Exceptions.MissingSignatureElementException
- uid: DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid*
  commentId: Overload:DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid
  href: DFeSigner.Core.Signers.DFeXmlSigner.html#DFeSigner_Core_Signers_DFeXmlSigner_IsSignatureValid_System_String_
  name: IsSignatureValid
  nameWithType: DFeXmlSigner.IsSignatureValid
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.IsSignatureValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId*
  commentId: Overload:DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId
  href: DFeSigner.Core.Signers.DFeXmlSigner.html#DFeSigner_Core_Signers_DFeXmlSigner_GetReferenceId_System_Xml_XmlDocument_
  name: GetReferenceId
  nameWithType: DFeXmlSigner.GetReferenceId
  fullName: DFeSigner.Core.Signers.DFeXmlSigner.GetReferenceId
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmldocument
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
